{
  "swagger": "2.0",
  "info": {
    "version": "1.1.0",
    "title": "Flight Most Traveled Destinations",
    "x-tags": [
      "#ama-for-dev"
    ],
    "x-status": "validated",
    "x-release-note": {
      "1.1.0": [
        "AFD-1091 - change from \"traveller\" to \"traveler\"",
        "Correct example",
        "Naming of parameter origin changed for originCityCode"
      ],
      "1.0.3": [
        "AFD-953 - change score format"
      ],
      "1.0.2": [
        "AFD-743 - add subtype in the reply"
      ],
      "1.0.1": [
        "replace \"flight\" and \"traveller\" values by score"
      ],
      "1.0.0": [
        "Initial Version"
      ]
    },
    "description": "# Introduction\n\nThe Flight Most Traveled Destinations REST/JSON API provides a list of the most popular flight destinations from a given origin during a specific period.\n\nThis can help answer questions like \"Where are most people flying to from Paris during the month of September?\"\n\nThe response is a list of air-traffic objects with the following information:\n- destination city\n- flights score: ratio betwewen the number of flights to the destination from that origin and the total number of flights from that origin (int between 0 and 100, 100 being the score for the top destination)\n- travelers score: ratio betwewen the number of passengers traveling to the destination from that origin and the total number of passengers traveling from that origin (int between 0 and 100, 100 being the score for the top destination) \nThe list is ordered by travelers scores by default, meaningthat the destination with the highest number of travelers is at the top of the list. Sorting by flights score is also possible.\n\n# Limitations\n\nThe traffic summary data is limited to bookings done through travel agencies (online and offline) using Amadeus.\n\n# Authorization\n\nBefore using the API you will need to get an access token. Please read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.\n\n# Supported Operations\n\nResource: air-traffic\n\nHTTP Method: GET"
  },
  "host": "test.api.amadeus.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/travel/analytics/air-traffic/traveled": {
      "get": {
        "tags": [
          "air-traffic"
        ],
        "operationId": "getAirTraffic",
        "summary": "Returns a list of air traffic reports.",
        "parameters": [
          {
            "name": "originCityCode",
            "description": "Code for the origin city following IATA standard ([IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx)). - e.g. BOS for Boston",
            "in": "query",
            "required": true,
            "type": "string",
            "pattern": "[A-Za-z]{3}"
          },
          {
            "name": "period",
            "description": "period when consumers are traveling.\n* It can be a month only. \n* [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format must be used - e.g. 2015-05. \n* Period ranges are not supported. \n* Only periods from 2011-01 up to previous month are valid. \n* Future dates are not supported.\n",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "max",
            "description": "maximum number of destinations in the response. Default value is **10** and maximum value is 50.",
            "in": "query",
            "required": false,
            "default": 10,
            "type": "number",
            "format": "integer"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/pageLimit"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/air-traffic"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        },
        "description": "This operation allows retrieving a list of reports showing the most popular flight destinations from an origin city during a flight time period. \n\nIt is based on estimated flight traffic summary data from two journey points over a specific period. Traffic summary data are limited to bookings done through travel agencies (online or not) with Amadeus system. \n\nIt returns up to 50 results showing the travelers score as well as the flights score. Scores are between 0 and 100, 100 being the score of the top destination. Those results are sorted by default per traveler score, but can also by sorted per flight score.\n\n### Request example:\nWhere were people flying to from Madrid in the January 2017?\n<pre><code>\nGET https://test.api.amadeus.com/v1/travel/analytics/air-traffic/traveled?originCityCode=MAD&period=2017-01\n</code></pre>\n \n### Response examples:\n<pre><code>\n{\n    \"meta\": {\n        \"count\": 10,\n        \"links\": {\n            \"self\": \"http://test.api.amadeus.com/v1/travel/analytics/air-traffic/traveled?originCityCode=MAD&page[limit]=10&page[offset]=0&period=2017-01\"\n        }\n    },\n    \"data\": [\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"PAR\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 74\n                },\n                \"travelers\": {\n                    \"score\": 100\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"BCN\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 100\n                },\n                \"travelers\": {\n                    \"score\": 78\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"TCI\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 33\n                },\n                \"travelers\": {\n                    \"score\": 67\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"LON\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 71\n                },\n                \"travelers\": {\n                    \"score\": 56\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"BRU\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 23\n                },\n                \"travelers\": {\n                    \"score\": 38\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"NYC\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 43\n                },\n                \"travelers\": {\n                    \"score\": 22\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"UIO\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 38\n                },\n                \"travelers\": {\n                    \"score\": 15\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"SDQ\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 10\n                },\n                \"travelers\": {\n                    \"score\": 15\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"OPO\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 16\n                },\n                \"travelers\": {\n                    \"score\": 8\n                }\n            }\n        },\n        {\n            \"type\": \"air-traffic\",\n            \"destination\": \"DXB\",\n            \"subType\": \"TRAVELED\",\n            \"analytics\": {\n                \"flights\": {\n                    \"score\": 26\n                },\n                \"travelers\": {\n                    \"score\": 7\n                }\n            }\n        }\n    ]\n}    \n</code></pre>"
      }
    }
  },
  "parameters": {
    "pageLimit": {
      "name": "page[limit]",
      "description": "maximum items in one page",
      "required": false,
      "in": "query",
      "type": "integer",
      "default": 10
    },
    "pageOffset": {
      "name": "page[offset]",
      "description": "start index of the requested page",
      "required": false,
      "in": "query",
      "type": "integer",
      "default": 0
    },
    "sort": {
      "description": "defines on which attribute the sorting will be done:\n* analytics.flights.score - sort destination by flights score (decreasing)\n* **analytics.travelers.score** - sort destination by traveler's score (decreasing)\n",
      "name": "sort",
      "required": false,
      "in": "query",
      "type": "string",
      "default": "analytics.travelers.score",
      "enum": [
        "analytics.flights.score",
        "analytics.travelers.score"
      ]
    },
    "fields": {
      "name": "fields",
      "required": false,
      "in": "query",
      "type": "string",
      "description": "list of attributes desired in the response or list of attributes to remove from the response (with \"-\" before fields) \n* The attributes names must contain the whole path (except resource name) e.g. travelers"
    }
  },
  "definitions": {
    "Air_Traffic": {
      "properties": {
        "type": {
          "type": "string",
          "example": "air-traffic"
        },
        "subType": {
          "type": "string"
        },
        "destination": {
          "description": "IATA code of the destination city - [IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx)",
          "type": "string",
          "example": "WAS"
        },
        "analytics": {
          "$ref": "#/definitions/Analytics"
        }
      }
    },
    "Error_400": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 400,
            "code": 477,
            "title": "INVALID FORMAT",
            "detail": "invalid query parameter format",
            "source": {
              "parameter": "airport",
              "example": "CDG"
            }
          }
        ]
      }
    },
    "Error_500": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 500,
            "code": 141,
            "title": "SYSTEM ERROR HAS OCCURRED"
          }
        ]
      }
    },
    "Issue": {
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer"
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string"
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string"
        },
        "source": {
          "type": "object",
          "title": "Issue_Source",
          "description": "an object containing references to the source of the error",
          "maxProperties": 1,
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string"
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the issue",
              "type": "string"
            },
            "example": {
              "description": "a string indicating an example of the right value",
              "type": "string"
            }
          }
        }
      }
    },
    "Collection_Meta": {
      "title": "Collection_Meta",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "links": {
          "title": "CollectionLinks",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "next": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "previous": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "last": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "first": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "up": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            }
          },
          "example": {
            "self": "https://test.api.amadeus.com/v1/area/resources?param=value"
          }
        }
      }
    },
    "Analytics": {
      "properties": {
        "flights": {
          "$ref": "#/definitions/Flights"
        },
        "travelers": {
          "$ref": "#/definitions/Travelers"
        }
      }
    },
    "Flights": {
      "properties": {
        "score": {
          "type": "number",
          "format": "integer",
          "description": "Approximate score for ranking purposes calculated based on number of flights from / to the airport or city",
          "example": 56
        }
      }
    },
    "Travelers": {
      "properties": {
        "score": {
          "type": "number",
          "format": "integer",
          "description": "Approximate score for ranking purposes calculated based on number of travelers in the location.",
          "example": 68
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "code    | title                                 \n------- | ------------------------------------- \n477     | INVALID FORMAT\n572     | INVALID OPTION\n2781    | INVALID LENGTH\n4926    | INVALID DATA RECEIVED                               \n32171   | MANDATORY DATA MISSING \t     \n",
      "schema": {
        "$ref": "#/definitions/Error_400"
      }
    },
    "500": {
      "description": "Unexpected Error",
      "schema": {
        "$ref": "#/definitions/Error_500"
      }
    },
    "air-traffic": {
      "description": "Successful Operation",
      "schema": {
        "title": "Success",
        "required": [
          "data"
        ],
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Issue"
            }
          },
          "meta": {
            "$ref": "#/definitions/Collection_Meta"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Air_Traffic"
            }
          }
        }
      }
    }
  },
  "x-generatedAt": "2018-10-31T16:24:53.304Z"
}