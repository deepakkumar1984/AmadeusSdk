{
  "swagger": "2.0",
  "info": {
    "version": "1.2.0",
    "title": "Airport & City Search",
    "x-status": "validated",
    "x-tags": [
      "#ama-for-dev"
    ],
    "x-release-note": {
      "1.2": [
        "Remove parameter onlyMajor",
        "Correct example"
      ],
      "1.1": [
        "AFD-1091 - change from \"traveller\" to \"traveler\"",
        "change default value of view indicator to FULL",
        "Change search algorithm",
        "Addition of \"id\" for location",
        "New operation GET Airport or City by id",
        "Traveler score become interger (PTR 14827552)",
        "Change the option parameter into view and onlyMajor parameter",
        "add a characters restriction on keyword parameter"
      ],
      "1.0": [
        "Initial Version"
      ]
    },
    "description": "# Introduction\n\nThe Airport & City Search REST/JSON API provides the full name, IATA code and geographical information of cities or airports that match a given keyword parameter, for use in flight searches.\n\nThe response provides a list of cities and/or airports, sorted by travelers' traffic score, which is based on the estimated yearly number of travelers by airport or city. Airports and cities with the highest traffic are at the top of the list.\n\nThere are two response formats for this API:\n- autocomplete, which contains only the most important information\n- descriptive, with more detailed information\n\n# Authorization\n\nBefore using the API you will need to get an access token. Please read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.\n\n# Supported Operations\n\nResource: location\n\nHTTP Method: GET"
  },
  "host": "test.api.amadeus.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/reference-data/locations": {
      "get": {
        "tags": [
          "location"
        ],
        "operationId": "getAirportCitySearch",
        "summary": "Returns a list of airports and cities matching a given keyword.",
        "parameters": [
          {
            "name": "subType",
            "description": "sub type of the location (AIRPORT and/or CITY)",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AIRPORT",
                "CITY"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "keyword",
            "description": "keyword that should represent the start of a word in a city or airport name or code",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "description": "Country code of the location using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageLimit"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          },
          {
            "$ref": "#/parameters/view"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/airport-city-autocomplete"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        },
        "description": "This operation allows retrieving the list of locations (airports or cities) that contain a specific keyword in the start of any word in their name or in the start of their IATA code.\nOnly major cities and civilian airports with several commercial flights per week are included by default. The response provides a list of cities and/or airports, sorted by default by travelers score, which is based on the number of travelers by airport or city, so that the airports and cities with the highest traffic are on top of the results.\n\nThere are two response formats:\n- the \"autocomplete\" one, which contains only most important descriptive information. This format allows a quick implementation of frontend Javascript autocomplete.\n- the descriptive one, with more information on airports and cities\n\n### Request example:\nWhich cities or airports start with â€™r'?\n<pre><code>\nGET https://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[limit]=5\n</code></pre>\n\n### Response example in case of airports and cities successfully returned with default response format (descriptive response format)\n\n<pre><code>\n{\n    \"meta\": {\n        \"count\": 127,\n        \"links\": {\n            \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[limit]=5\",\n            \"next\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[offset]=5&page[limit]=5\",\n            \"last\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[offset]=122&page[limit]=5\"\n        }\n    },\n    \"data\": [\n        {\n            \"type\": \"location\",\n            \"subType\": \"AIRPORT\",\n            \"name\": \"R REAGAN NAT\",\n            \"detailedName\": \"WASHINGTON/DC/US:R REAGAN NAT\",\n            \"id\": \"ADCA\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ADCA\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"-04:00\",\n            \"iataCode\": \"DCA\",\n            \"geoCode\": {\n                \"latitude\": 38.85233,\n                \"longitude\": -77.0372\n            },\n            \"address\": {\n                \"cityName\": \"WASHINGTON\",\n                \"cityCode\": \"WAS\",\n                \"countryName\": \"UNITED STATES OF AMERICA\",\n                \"countryCode\": \"US\",\n                \"stateCode\": \"DC\",\n                \"regionCode\": \"NAMER\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 14\n                }\n            }\n        },\n        {\n            \"type\": \"location\",\n            \"subType\": \"AIRPORT\",\n            \"name\": \"RAJIV GANDHI INTL\",\n            \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",\n            \"id\": \"AHYD\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/AHYD\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"+05:30\",\n            \"iataCode\": \"HYD\",\n            \"geoCode\": {\n                \"latitude\": 17.23132,\n                \"longitude\": 78.42986\n            },\n            \"address\": {\n                \"cityName\": \"HYDERABAD\",\n                \"cityCode\": \"HYD\",\n                \"countryName\": \"INDIA\",\n                \"countryCode\": \"IN\",\n                \"regionCode\": \"ASIA\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 9\n                }\n            }\n        },\n        {\n            \"type\": \"location\",\n            \"subType\": \"CITY\",\n            \"name\": \"RAJIV GANDHI INTL\",\n            \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",\n            \"id\": \"CHYD\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/CHYD\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"+05:30\",\n            \"iataCode\": \"HYD\",\n            \"geoCode\": {\n                \"latitude\": 17.23132,\n                \"longitude\": 78.42986\n            },\n            \"address\": {\n                \"cityName\": \"HYDERABAD\",\n                \"cityCode\": \"HYD\",\n                \"countryName\": \"INDIA\",\n                \"countryCode\": \"IN\",\n                \"regionCode\": \"ASIA\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 9\n                }\n            }\n        },\n        {\n            \"type\": \"location\",\n            \"subType\": \"AIRPORT\",\n            \"name\": \"INTERNATIONAL\",\n            \"detailedName\": \"RALEIGH DURHAM/NC/US:INTERNATI\",\n            \"id\": \"ARDU\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ARDU\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"-04:00\",\n            \"iataCode\": \"RDU\",\n            \"geoCode\": {\n                \"latitude\": 35.87946,\n                \"longitude\": -78.7871\n            },\n            \"address\": {\n                \"cityName\": \"RALEIGH DURHAM\",\n                \"cityCode\": \"RDU\",\n                \"countryName\": \"UNITED STATES OF AMERICA\",\n                \"countryCode\": \"US\",\n                \"stateCode\": \"NC\",\n                \"regionCode\": \"NAMER\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 7\n                }\n            }\n        },\n        {\n            \"type\": \"location\",\n            \"subType\": \"CITY\",\n            \"name\": \"INTERNATIONAL\",\n            \"detailedName\": \"RALEIGH DURHAM/NC/US:INTERNATI\",\n            \"id\": \"CRDU\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/CRDU\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"timeZoneOffset\": \"-04:00\",\n            \"iataCode\": \"RDU\",\n            \"geoCode\": {\n                \"latitude\": 35.87946,\n                \"longitude\": -78.7871\n            },\n            \"address\": {\n                \"cityName\": \"RALEIGH DURHAM\",\n                \"cityCode\": \"RDU\",\n                \"countryName\": \"UNITED STATES OF AMERICA\",\n                \"countryCode\": \"US\",\n                \"stateCode\": \"NC\",\n                \"regionCode\": \"NAMER\"\n            },\n            \"analytics\": {\n                \"travelers\": {\n                    \"score\": 7\n                }\n            }\n        }\n    ]\n}</code></pre>\n\n### Response example in case of airports and cities successfully returned with with view=LIGHT (autocomplete)\n<pre><code>\n{\n    \"meta\": {\n        \"count\": 127,\n        \"links\": {\n            \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[limit]=2\",\n            \"next\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[offset]=2&page[limit]=2\",\n            \"last\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[offset]=125&page[limit]=2\"\n        }\n    },\n    \"data\": [\n        {\n            \"type\": \"location\",\n            \"subType\": \"AIRPORT\",\n            \"name\": \"R REAGAN NAT\",\n            \"detailedName\": \"WASHINGTON/DC/US:R REAGAN NAT\",\n            \"id\": \"ADCA\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ADCA\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"iataCode\": \"DCA\",\n            \"address\": {\n                \"cityName\": \"WASHINGTON\",\n                \"countryName\": \"UNITED STATES OF AMERICA\"\n            }\n        },\n        {\n            \"type\": \"location\",\n            \"subType\": \"AIRPORT\",\n            \"name\": \"RAJIV GANDHI INTL\",\n            \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",\n            \"id\": \"AHYD\",\n            \"self\": {\n                \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/AHYD\",\n                \"methods\": [\n                    \"GET\"\n                ]\n            },\n            \"iataCode\": \"HYD\",\n            \"address\": {\n                \"cityName\": \"HYDERABAD\",\n                \"countryName\": \"INDIA\"\n            }\n        }\n    ]\n}\n</code></pre>\n"
      }
    },
    "/reference-data/locations/{locationId}": {
      "get": {
        "tags": [
          "location"
        ],
        "operationId": "getAirportCity",
        "summary": "Returns a specific airports or cities based on its id.",
        "parameters": [
          {
            "$ref": "#/parameters/locationId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/airport-city"
          },
          "400": {
            "$ref": "#/responses/400_GET-Id"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        },
        "description": "This operation allows retrieving a locations (airports or cities) based on its id.\n\n### Request example:\nRetrieve information about the LHR airport?\n<pre><code>\nGET https://test.api.amadeus.com/v1/reference-data/locations/ALHR\n</code></pre>\n\n### Response examples:       \n<pre><code>\n{\n    \"meta\": {\n        \"links\": {\n            \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations/ALHR\"\n        }\n    },\n    \"data\": {\n        \"type\": \"location\",\n        \"subType\": \"AIRPORT\",\n        \"name\": \"HEATHROW\",\n        \"detailedName\": \"LONDON/GB:HEATHROW\",\n        \"id\": \"ALHR\",\n        \"self\": {\n            \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ALHR\",\n            \"methods\": [\n                \"GET\"\n            ]\n        },\n        \"timeZoneOffset\": \"+01:00\",\n        \"iataCode\": \"LHR\",\n        \"geoCode\": {\n            \"latitude\": 51.47294,\n            \"longitude\": -0.45061\n        },\n        \"address\": {\n            \"cityName\": \"LONDON\",\n            \"cityCode\": \"LON\",\n            \"countryName\": \"UNITED KINGDOM\",\n            \"countryCode\": \"GB\",\n            \"regionCode\": \"EUROP\"\n        },\n        \"analytics\": {\n            \"travelers\": {\n                \"score\": 45\n            }\n        }\n    }\n}\n</pre></code> \n"
      }
    }
  },
  "parameters": {
    "pageLimit": {
      "name": "page[limit]",
      "description": "maximum items in one page",
      "required": false,
      "in": "query",
      "type": "integer",
      "default": 10
    },
    "pageOffset": {
      "name": "page[offset]",
      "description": "start index of the requested page",
      "required": false,
      "in": "query",
      "type": "integer",
      "default": 0
    },
    "sort": {
      "name": "sort",
      "description": "defines on which attribute the sorting will be done:\n* analytics.travelers.score - sort by the number of travelers by airport or city, the airports and cities with the highest traffic are on top of the results\n",
      "required": false,
      "in": "query",
      "type": "string",
      "default": "analytics.travelers.score",
      "enum": [
        "analytics.travelers.score"
      ]
    },
    "view": {
      "name": "view",
      "description": "select the level of information of the reply:\n* LIGHT - Gives only the IATACode, name, detailedName, cityName and countryName\n* FULL - Adds on top of the LIGHT information the timeZoneOffset, geocode, detailed address and travelers.score\ndefault option is FULL\n",
      "required": false,
      "in": "query",
      "default": "FULL",
      "type": "string",
      "enum": [
        "LIGHT",
        "FULL"
      ]
    },
    "locationId": {
      "name": "locationId",
      "description": "identifier of the location",
      "required": true,
      "in": "path",
      "type": "string"
    }
  },
  "definitions": {
    "Location": {
      "properties": {
        "id": {
          "description": "id of the ressource",
          "type": "string"
        },
        "self": {
          "$ref": "#/definitions/Links"
        },
        "type": {
          "description": "the resource name",
          "type": "string",
          "example": "location"
        },
        "subType": {
          "description": "location sub type",
          "type": "string",
          "enum": [
            "AIRPORT",
            "CITY"
          ],
          "example": "AIRPORT"
        },
        "name": {
          "description": "short name of the location",
          "type": "string",
          "example": "Paris CDG"
        },
        "detailedName": {
          "description": "detailed name of the location. For a city location it contains city name and country code. For an airport location it contains city name; country code and airport full name",
          "type": "string",
          "example": "Paris/FR: Charles de Gaulle"
        },
        "timeZoneOffset": {
          "description": "timezone offset of the location at the date of the API call (including daylight saving time)",
          "type": "string",
          "example": "+01:00"
        },
        "iataCode": {
          "description": "IATA code of the location. ([IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx) here)",
          "type": "string",
          "example": "CDG"
        },
        "geoCode": {
          "$ref": "#/definitions/GeoCode"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "distance": {
          "$ref": "#/definitions/Distance"
        },
        "analytics": {
          "$ref": "#/definitions/Analytics"
        },
        "relevance": {
          "type": "number",
          "format": "double",
          "description": "score value calculated based on distance and analytics",
          "example": 9.6584
        }
      }
    },
    "Address": {
      "properties": {
        "cityName": {
          "description": "name of the city of the location; equal to name if the location is a city",
          "type": "string",
          "example": "Paris"
        },
        "cityCode": {
          "description": "IATA code of the city of the location; equal to IATAcode if the location is a city",
          "type": "string",
          "example": "PAR"
        },
        "countryName": {
          "description": "name of the country of the location",
          "type": "string",
          "example": "France"
        },
        "countryCode": {
          "description": "code of the country of the location in ISO standard",
          "type": "string",
          "example": "FR"
        },
        "stateCode": {
          "description": "code of the state of the location if any",
          "type": "string",
          "example": "TO"
        },
        "regionCode": {
          "description": "code of the region of the location in ISO standard",
          "type": "string",
          "example": "EUROP"
        }
      }
    },
    "Distance": {
      "properties": {
        "value": {
          "description": "great-circle distance between two locations. This distance thus do not take into account traffic conditions; international boundaries; mountains; water; or other elements that might make the a nearby location hard to reach.",
          "type": "integer",
          "example": 152
        },
        "unit": {
          "description": "unit of the distance",
          "type": "string",
          "example": "KM",
          "enum": [
            "KM"
          ]
        }
      }
    },
    "GeoCode": {
      "properties": {
        "latitude": {
          "description": "latitude of the location",
          "type": "number",
          "format": "double",
          "example": 43.580418
        },
        "longitude": {
          "description": "longitude of the location",
          "type": "number",
          "format": "double",
          "example": 7.125102
        }
      }
    },
    "Analytics": {
      "properties": {
        "travelers": {
          "$ref": "#/definitions/Travelers"
        }
      }
    },
    "Travelers": {
      "properties": {
        "score": {
          "type": "number",
          "format": "integer",
          "description": "Approximate score for ranking purposes calculated based on number of travelers in the location.",
          "example": 68
        }
      }
    },
    "Error_400": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 400,
            "code": 477,
            "title": "INVALID FORMAT",
            "detail": "invalid query parameter format",
            "source": {
              "parameter": "airport",
              "example": "CDG"
            }
          }
        ]
      }
    },
    "Error_404": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 404,
            "code": 1797,
            "title": "NOT FOUND",
            "detail": "no response found for this query parameter",
            "source": {
              "parameter": "airport"
            }
          }
        ]
      }
    },
    "Error_500": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 500,
            "code": 141,
            "title": "SYSTEM ERROR HAS OCCURRED"
          }
        ]
      }
    },
    "Issue": {
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer"
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string"
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string"
        },
        "source": {
          "type": "object",
          "title": "Issue_Source",
          "description": "an object containing references to the source of the error",
          "maxProperties": 1,
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string"
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the issue",
              "type": "string"
            },
            "example": {
              "description": "a string indicating an example of the right value",
              "type": "string"
            }
          }
        }
      }
    },
    "Collection_Meta": {
      "title": "Collection_Meta",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "links": {
          "title": "CollectionLinks",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "next": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "previous": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "last": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "first": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            },
            "up": {
              "type": "string",
              "format": "uri",
              "example": "https://test.api.amadeus.com/v1/area/resources?..."
            }
          },
          "example": {
            "self": "https://test.api.amadeus.com/v1/area/resources?param=value"
          }
        }
      }
    },
    "Links": {
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "GET",
              "PUT",
              "DELETE",
              "POST",
              "PATCH"
            ]
          }
        },
        "count": {
          "type": "integer"
        }
      },
      "example": {
        "href": "string"
      }
    }
  },
  "responses": {
    "400": {
      "description": "code    | title                                 \n------- | ------------------------------------- \n477     | INVALID FORMAT\n572     | INVALID OPTION \n2781    | INVALID LENGTH\n4926    | INVALID DATA RECEIVED               \n32171   | MANDATORY DATA MISSING \t     \n",
      "schema": {
        "$ref": "#/definitions/Error_400"
      }
    },
    "404": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/Error_404"
      }
    },
    "500": {
      "description": "Unexpected Error",
      "schema": {
        "$ref": "#/definitions/Error_500"
      }
    },
    "airport-city-autocomplete": {
      "description": "Successful Operation",
      "schema": {
        "title": "Success",
        "required": [
          "data"
        ],
        "properties": {
          "meta": {
            "$ref": "#/definitions/Collection_Meta"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "airport-city": {
      "description": "Successful Operation",
      "schema": {
        "title": "Success",
        "required": [
          "data"
        ],
        "properties": {
          "meta": {
            "$ref": "#/definitions/Collection_Meta"
          },
          "data": {
            "$ref": "#/definitions/Location"
          }
        }
      }
    },
    "400_GET-Id": {
      "description": "code    | title                                 \n------- | ------------------------------------- \n572     | INVALID OPTION    \n",
      "schema": {
        "$ref": "#/definitions/Error_400"
      }
    }
  },
  "x-generatedAt": "2018-10-31T16:18:32.610Z"
}