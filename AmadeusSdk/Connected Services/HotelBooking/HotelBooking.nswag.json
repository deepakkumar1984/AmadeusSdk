{
  "swagger": "2.0",
  "info": {
    "title": "Hotel Booking",
    "description": "# Introduction\n\nThe **Hotel Booking** REST/JSON API is an open API that allows you to book the best hotel offers you have searched from a wide choice of providers.\n\n**Important:** The role of Amadeus during the payment process is to facilitate the transfer of payment information from the customer to the hotel. We do not check the validity of any payment information.\n\n# Authorization\n\nBefore using the API you will need to get an access token. Please read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.\n",
    "version": "1.1.0",
    "x-tags": [
      "#mobile-services"
    ],
    "x-status": "validated"
  },
  "host": "test.api.amadeus.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/booking/hotel-bookings": {
      "parameters": [
        {
          "$ref": "#/parameters/Ama-Client-Ref"
        },
        {
          "$ref": "#/parameters/Accept-Encoding"
        }
      ],
      "post": {
        "tags": [
          "booking"
        ],
        "summary": "BOOK ROOMS",
        "description": "This service allows the user to book the offer retrieved from Hotel Shopping API. \nThe minimum mandatory parameters are:\n- offerId\n- guest name and contact\n\nThe user can also specify payment details. \nFor multiple rooms, guests and payments identifiers can be defined for the repartition.\nThe room object contains the list of guests identifiers, one payment identifier and one special request. \nIn case the offerId refers to more than one room, it is recommended that the user defines guests ditribution in each room.\nIn case multiple guests are defined in guest details and no distribution is provided, each guest is assigned to a separate room.  \n\nIf the booking is successful, the provider confirmation number is returned in the response. In case of multiple rooms, several confirmation numbers are returned: one per room.  \n\n### Query example\n<pre><code>POST /v1/booking/hotel-bookings HTTP/1.1\n<br/>{\n  \"data\": {\n    \"offerId\": \"63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3\",\n    \"guests\": [\n      {\n        \"name\": {\n          \"title\": \"MR\",\n          \"firstName\": \"BOB\",\n          \"lastName\": \"SMITH\"\n        },\n        \"contact\": {\n          \"phone\": \"+33679278416\",\n          \"email\": \"bob.smith@email.com\"\n        }\n      }\n    ],\n    \"payments\": [\n      {\n        \"method\": \"creditCard\",\n        \"card\": {\n          \"vendorCode\": \"VI\",\n          \"cardNumber\": \"4111111111111111\",\n          \"expiryDate\": \"2023-01\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n### Response example\n<pre><code>HTTP/1.1 201 Created\n<br/>{\n  \"data\": [\n    {\n      \"type\": \"hotel-booking\",\n      \"id\": \"XD_8138319951754\",\n      \"providerConfirmationId\": \"8138319951754\",\n      \"associatedRecords\": [\n        {\n          \"reference\": \"QVH2BX\",\n          \"originSystemCode\": \"GDS\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>\n",
        "operationId": "createBooking",
        "parameters": [
          {
            "$ref": "#/parameters/bookingBody/schema"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/BookingSell",
            "description": ""
          },
          "400": {
            "$ref": "#/responses/Error400ResponseCreateBooking",
            "description": ""
          },
          "500": {
            "$ref": "#/responses/Error500ResponseCreateBooking",
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "title": "ErrorResponse",
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error",
      "required": [
        "code",
        "title",
        "status"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "[Integer] A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error",
          "example": 1
        },
        "title": {
          "type": "string",
          "description": "[String] An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized",
          "example": "Resource not found"
        },
        "detail": {
          "type": "string",
          "description": "[String] An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field value can be localized.",
          "example": "The targeted resource doesn't exist"
        },
        "status": {
          "type": "integer",
          "description": "[Integer] The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status.",
          "example": 400
        }
      }
    },
    "Warning": {
      "type": "object",
      "description": "Warning",
      "required": [
        "code",
        "title"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "[Integer] A machine-readable warning code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of warning",
          "example": 1
        },
        "title": {
          "type": "string",
          "description": "[String] A warning title from the Canned Messages table with a 1:1 correspondence to the warning code. This may be localized",
          "example": "Resource not found"
        },
        "detail": {
          "type": "string",
          "description": "[String] An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field value can be localized.",
          "example": "The targeted resource doesn't exist"
        }
      }
    },
    "HotelBookingLight": {
      "type": "object",
      "description": "Booking Details",
      "required": [
        "type",
        "id",
        "providerConfirmationId"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Response Type",
          "example": "hotel-booking"
        },
        "id": {
          "type": "string",
          "description": "Booking Id",
          "maxLength": 19,
          "minLength": 5,
          "pattern": "^[A-Z0-9_]*$",
          "example": "XD_8138319951754"
        },
        "providerConfirmationId": {
          "type": "string",
          "description": "GDS Confirmation Number. If you call the Provider, this Reference may be asked",
          "maxLength": 16,
          "minLength": 2,
          "pattern": "^[A-Z0-9_]*$",
          "example": "8138319951754"
        },
        "associatedRecords": {
          "type": "array",
          "maxItems": 1,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AssociatedRecord"
          }
        },
        "self": {
          "type": "string",
          "description": "Retrieve Booking Details",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/booking/hotel-bookings/XD_8138319951754"
        }
      }
    },
    "AssociatedRecord": {
      "type": "object",
      "description": "Associated Record (Flight Booking Record)",
      "required": [
        "reference",
        "originSystemCode"
      ],
      "properties": {
        "reference": {
          "type": "string",
          "description": "Amadeus GDS Record",
          "maxLength": 6,
          "minLength": 6,
          "pattern": "^[A-Z0-9]{6}$",
          "example": "QVH2BX"
        },
        "originSystemCode": {
          "type": "string",
          "description": "* GDS: Associated Amadeus GDS Flight Booking PNR Record",
          "example": "GDS",
          "enum": [
            "GDS"
          ]
        }
      }
    },
    "Stakeholder": {
      "type": "object",
      "description": "Guest Details",
      "example": {
        "id": 1,
        "name": {
          "title": "MR",
          "firstName": "BOB",
          "lastName": "SMITH"
        },
        "contact": {
          "phone": "+33679278416",
          "email": "bob.smith@email.com"
        }
      },
      "required": [
        "name",
        "contact"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "item identifier",
          "example": 1
        },
        "name": {
          "$ref": "#/definitions/Name"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "hotelRewardsMember": {
          "type": "string",
          "description": "Hotel Chain Rewards Member Number. To receive your Rewards Points, access online check in, fast check out. An error is returned by the Chain if the number is invalid.\nExample Rewards Programs:\n* Marriott Bonvoy\n* Hilton Honors\n* Hyatt Rewards\n* IHG Rewards\n* Wyndham Rewards\n* Accor Live Limitless ALL\n* Best Western Rewards\n* Choice Privileges\n* Radisson Rewards\n",
          "maxLength": 21,
          "minLength": 1,
          "pattern": "^[A-Z0-9-]{1,21}$",
          "example": "3081031320523260"
        }
      }
    },
    "Name": {
      "type": "object",
      "description": "Guest Name",
      "required": [
        "firstName",
        "lastName"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "title/gender of room guest",
          "maxLength": 54,
          "minLength": 1,
          "pattern": "^[A-Za-z -]*$",
          "example": "MR",
          "enum": [
            "MR",
            "MRS",
            "MS"
          ]
        },
        "firstName": {
          "type": "string",
          "description": "first name (and middle name) of room guest",
          "maxLength": 56,
          "minLength": 1,
          "pattern": "^[A-Za-z \\p{Han}\\p{Katakana}\\p{Hiragana}\\p{Hangul}-]*$",
          "example": "BOB"
        },
        "lastName": {
          "type": "string",
          "description": "last name of room guest",
          "maxLength": 57,
          "minLength": 1,
          "pattern": "^[A-Za-z \\p{Han}\\p{Katakana}\\p{Hiragana}\\p{Hangul}-]*$",
          "example": "SMITH"
        }
      }
    },
    "Contact": {
      "type": "object",
      "description": "Contact Details",
      "required": [
        "phone",
        "email"
      ],
      "properties": {
        "phone": {
          "type": "string",
          "description": "Phone Number in standard E.123(https://en.wikipedia.org/wiki/E.123)",
          "maxLength": 20,
          "minLength": 6,
          "pattern": "^[+][1-9][0-9]{4,18}$",
          "example": "+33679278416"
        },
        "email": {
          "type": "string",
          "description": "Email Address",
          "format": "email",
          "maxLength": 90,
          "minLength": 3,
          "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$",
          "example": "bob.smith@email.com"
        }
      }
    },
    "Address": {
      "type": "object",
      "description": "Address Details",
      "required": [
        "lines",
        "cityName",
        "countryCode"
      ],
      "properties": {
        "lines": {
          "type": "array",
          "description": "Address Lines",
          "maxItems": 2,
          "minItems": 1,
          "example": [
            "1 Collins Avenue",
            "Miami Beach"
          ],
          "items": {
            "type": "string",
            "description": "Address Line",
            "maxLength": 70,
            "minLength": 1,
            "example": "1 Collins Avenue"
          }
        },
        "cityName": {
          "type": "string",
          "description": "City Name",
          "maxLength": 35,
          "minLength": 1,
          "example": "MIAMI"
        },
        "postalCode": {
          "type": "string",
          "description": "Zip/Post Code",
          "maxLength": 17,
          "minLength": 0,
          "example": "33139"
        },
        "stateCode": {
          "type": "string",
          "description": "State Code. ISO 3166-2 defines codes for identifying the principal subdivisions (e.g. provinces or states) of all countries coded in ISO 3166-1",
          "maxLength": 9,
          "minLength": 0,
          "example": "FL"
        },
        "countryCode": {
          "type": "string",
          "description": "Country Code in ISO 3166-1 format",
          "maxLength": 2,
          "minLength": 2,
          "pattern": "^[A-Z]{2}$",
          "example": "US"
        }
      }
    },
    "Payment": {
      "title": "Payment",
      "type": "object",
      "description": "form of payment (mandatory in case of `acceptedPayments`/`methods`)",
      "required": [
        "method"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "method": {
          "type": "string",
          "description": "The Payment Methods:\n * creditCard (CC) - Payment Cards in `creditCards` are accepted           ",
          "example": "creditCard",
          "enum": [
            "creditCard"
          ]
        },
        "card": {
          "title": "Card",
          "type": "object",
          "description": "payment card details (mandatory in case of `method` creditCard)",
          "required": [
            "vendorCode",
            "cardNumber",
            "expiryDate"
          ],
          "properties": {
            "vendorCode": {
              "type": "string",
              "description": "card type (CA, VI, AX, DC...)\nExamples:\n  * CA - MasterCard (warning: use it instead of MC/IK/EC/MD/XS)\n  * VI - Visa\n  * AX - American Express\n  * DC - Diners Club\n  * AU - Carte Aurore\n  * CG - Cofinoga\n  * DS - Discover\n  * GK - Lufthansa GK Card\n  * JC - Japanese Credit Bureau\n  * TC - Torch Club\n  * TP - Universal Air Travel Card\n  * BC - Bank Card\n  * DL - Delta\n  * MA - Maestro\n  * UP - China UnionPay   \n  * VE - Visa Electron\n",
              "maxLength": 2,
              "minLength": 2,
              "pattern": "^[A-Z]{2}$",
              "example": "VI"
            },
            "cardNumber": {
              "type": "string",
              "description": "card number",
              "maxLength": 22,
              "minLength": 2,
              "pattern": "^[0-9]*$",
              "example": "4111111111111111"
            },
            "expiryDate": {
              "type": "string",
              "description": "Expiration Date YYYY-MM",
              "maxLength": 7,
              "minLength": 7,
              "pattern": "^[0-9]{4}-[0-9]{2}$",
              "example": "2019-01"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "bookingBody": {
      "name": "requestBody",
      "in": "body",
      "required": true,
      "description": "`offerId`, `guests`, `payments` and optional `rooms` for the repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)\n",
      "schema": {
        "title": "BookingSchema",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "title": "HotelBookingQuery",
            "type": "object",
            "required": [
              "offerId",
              "guests"
            ],
            "properties": {
              "offerId": {
                "type": "string",
                "description": "offerId to book",
                "maxLength": 100,
                "minLength": 2,
                "pattern": "^[A-Z0-9]*$",
                "example": "63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3"
              },
              "guests": {
                "type": "array",
                "description": "minimum one guest is mandatory",
                "maxItems": 99,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "$ref": "#/definitions/Stakeholder"
                }
              },
              "payments": {
                "type": "array",
                "description": "payments (often mandatory)",
                "maxItems": 9,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "$ref": "#/definitions/Payment"
                }
              },
              "rooms": {
                "type": "array",
                "description": "rooms repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)",
                "maxItems": 9,
                "minItems": 1,
                "items": {
                  "title": "Room",
                  "type": "object",
                  "description": "room",
                  "properties": {
                    "guestIds": {
                      "type": "array",
                      "description": "room main guest (and accompagnants) (optional)",
                      "uniqueItems": true,
                      "items": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "paymentId": {
                      "type": "integer",
                      "description": "if missing, the first payment is used (optional)",
                      "example": 1
                    },
                    "specialRequest": {
                      "type": "string",
                      "description": "special request to send to the reception (optional)",
                      "maxLength": 120,
                      "minLength": 2,
                      "example": "I will arrive at midnight"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Ama-Client-Ref": {
      "type": "string",
      "name": "Ama-Client-Ref",
      "in": "header",
      "description": "Client Reference to track Request/Response",
      "pattern": "^[A-Z0-9_]*$"
    },
    "Accept-Encoding": {
      "type": "string",
      "name": "Accept-Encoding",
      "in": "header",
      "description": "Compress the Response",
      "enum": [
        "gzip",
        "identity"
      ]
    }
  },
  "responses": {
    "BookingSell": {
      "description": "Booked",
      "schema": {
        "title": "HotelBookedResponse",
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "description": "All Warnings",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          },
          "data": {
            "type": "array",
            "description": "All room bookings data",
            "items": {
              "$ref": "#/definitions/HotelBookingLight"
            }
          }
        }
      }
    },
    "Error400ResponseCreateBooking": {
      "description": "Bad Request\n\ncode    | title                                                          | owner    | pointer\n------- | -------------------------------------------------------------- | -------- | -------\n  477   | INVALID FORMAT                                                 | Amadeus  | \n 4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds\n33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms\n33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId\n36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId\n 1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode\n 8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber\n 1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card\n 1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card\n 3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card\n 3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode\n 3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate\n \n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "Error500ResponseCreateBooking": {
      "description": "Internal Server Error\n\ncode    | title                                                          | owner                                \n------- | -------------------------------------------------------------- | -------\n00011   | UNABLE TO PROCESS                                              | Provider\n04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "tags": [
    {
      "name": "booking",
      "description": "Book"
    }
  ],
  "x-generatedAt": "2020-02-12T17:01:55.203Z"
}