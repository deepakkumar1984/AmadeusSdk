{
  "swagger": "2.0",
  "info": {
    "title": "Airport On-Time Performance",
    "description": "# Introduction\n\nReturns a percentage of on-time flight departures from a given airport.\n\n# Authorization\n\nBefore using the API you will need to get an access token. Please read our\n**[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.\n\n# Supported Operations\n\nResource: location\n\nHTTP Method: GET\n",
    "version": "1.0.2",
    "x-tags": [
      "#ama-for-dev"
    ],
    "x-status": "validated",
    "x-release-note": {
      "1.0": [
        "Initial Version"
      ]
    }
  },
  "host": "test.api.amadeus.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/airport/predictions/on-time": {
      "get": {
        "tags": [
          "airport-ontime-prediction"
        ],
        "summary": "Returns a percentage of on-time flight departures from a given airport.",
        "description": "Returns a percentage of on-time flight departures from a given airport.\n\n### Request example:\n<pre><code>  GET https://test.api.amadeus.com/v1/airport/predictions/on-time?airportCode=JFK&date=2020-08-01 </code></pre> \n\n### Response example:\n<pre><code>\n{\n  \"data\": {\n      \"id\": \"JFK20200801\",\n      \"probability\": \"0.928\",\n      \"result\": \"0.74906671\",\n      \"subType\": \"on-time\",\n      \"type\": \"prediction\"\n  },\n  \"meta\": {\n      \"links\": {\n          \"self\": \"https://test.api.amadeus.com/v1/airport/predictions/on-time?airportCode=JFK&date=2020-08-01\"\n      }\n  }\n}\n</code></pre>\n",
        "operationId": "getAirportOnTimePrediction",
        "parameters": [
          {
            "type": "string",
            "name": "airportCode",
            "in": "query",
            "required": true,
            "description": "airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx), e.g. BOS for Boston",
            "pattern": "[A-Z]{3}"
          },
          {
            "type": "string",
            "name": "date",
            "in": "query",
            "required": true,
            "description": "the date on which the traveler will depart from the give airport. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2019-12-25",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200",
            "description": ""
          },
          "400": {
            "$ref": "#/responses/400",
            "description": ""
          },
          "default": {
            "$ref": "#/responses/500",
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "Prediction": {
      "type": "object",
      "example": {
        "data": {
          "id": "JFK20200801",
          "probability": "0.928",
          "result": "0.74906671",
          "subType": "on-time",
          "type": "prediction"
        },
        "meta": {
          "links": {
            "self": "https://test.api.amadeus.com/v1/airport/predictions/on-time?airportCode=JFK&date=2020-08-01"
          }
        }
      },
      "properties": {
        "data": {
          "$ref": "#/definitions/OnTimePrediction"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Meta": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "OnTimePrediction": {
      "properties": {
        "type": {
          "type": "string",
          "description": "the resource name (`prediction`)"
        },
        "subType": {
          "type": "string",
          "example": "trip-purpose"
        },
        "id": {
          "type": "string",
          "description": "item identifier",
          "readOnly": true
        },
        "result": {
          "$ref": "#/definitions/PredictionResultType"
        },
        "probability": {
          "type": "string",
          "description": "probability of the forecast (between 0 and 1)"
        }
      }
    },
    "PredictionResultType": {
      "type": "string",
      "description": "forecast description",
      "example": 0.8
    },
    "Links": {
      "properties": {
        "self": {
          "type": "string",
          "format": "uri"
        },
        "related": {
          "type": "string",
          "format": "uri"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Error_400": {
      "example": {
        "errors": [
          {
            "status": 400,
            "code": 477,
            "title": "INVALID FORMAT",
            "detail": "invalid query parameter format",
            "source": {
              "parameter": "airport",
              "example": "CDG"
            }
          }
        ]
      },
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      }
    },
    "Error_500": {
      "example": {
        "errors": [
          {
            "status": 500,
            "code": 141,
            "title": "SYSTEM ERROR HAS OCCURRED"
          }
        ]
      },
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        }
      }
    },
    "Issue": {
      "properties": {
        "status": {
          "type": "integer",
          "description": "the HTTP status code applicable to this error"
        },
        "code": {
          "type": "integer",
          "description": "an application-specific error code",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "a short summary of the error"
        },
        "detail": {
          "type": "string",
          "description": "explanation of the error"
        },
        "source": {
          "title": "Issue_Source",
          "type": "object",
          "description": "an object containing references to the source of the error",
          "maxProperties": 1,
          "properties": {
            "pointer": {
              "type": "string",
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document"
            },
            "parameter": {
              "type": "string",
              "description": "a string indicating which URI query parameter caused the issue"
            },
            "example": {
              "type": "string",
              "description": "a string indicating an example of the right value"
            }
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Success",
      "schema": {
        "$ref": "#/definitions/Prediction"
      }
    },
    "400": {
      "description": "code    | title                                 \n------- | ------------------------------------- \n477     | INVALID FORMAT\n572     | INVALID OPTION\n4926    | INVALID DATA RECEIVED               \n32171   | MANDATORY DATA MISSING \t     \n",
      "schema": {
        "$ref": "#/definitions/Error_400"
      }
    },
    "500": {
      "description": "Unexpected Error",
      "schema": {
        "$ref": "#/definitions/Error_500"
      }
    }
  },
  "x-generatedAt": "2020-01-15T13:55:48.854Z"
}